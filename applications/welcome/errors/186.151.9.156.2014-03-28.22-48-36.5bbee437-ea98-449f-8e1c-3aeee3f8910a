(dp1
S'output'
p2
S'<class \'gluon.contrib.pymysql.err.ProgrammingError\'> (1146, u"Table \'cpfecys.auth_user\' doesn\'t exist")'
p3
sS'layer'
p4
S'/opt/web-apps/web2py/applications/welcome/models/db.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\nif not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n    db = DAL(\'mysql://root@localhost/cpfecys\',pool_size=1,check_reserved=[\'all\'])\nelse:\n    ## connect to Google BigTable (optional \'google:datastore://namespace\')\n    db = DAL(\'google:datastore\')\n    ## store sessions and tickets there\n    session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n#Some weird web2py bug fixed here to avoid overwritting code in core\nfrom gluon.dal import BaseAdapter\ndef ADD(self, first, second):\n    if self.is_numerical_type(first.type) or isinstance(first, Field):\n        return \'(%s + %s)\' % (self.expand(first),\n                              self.expand(second, first.type))\n    else:\n        return self.CONCAT(first, second)\nBaseAdapter.ADD = ADD\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be \'controller/function.extension\'\nresponse.generic_patterns = [\'*\'] if request.is_local else []\n## (optional) optimize handling of static files\n# response.optimize_css = \'concat,minify,inline\'\n# response.optimize_js = \'concat,minify,inline\'\n\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\n\n# NOTE: length=255 is needed because a bug in mysql\n# as describede here: http://goo.gl/NBG5JM\nauth.settings.extra_fields[\'auth_user\']= [\n                  Field(\'phone\', \'string\', length=16, notnull=False),\n                  Field(\'working\', \'boolean\', notnull=False),\n                  Field(\'work_address\', \'string\',length=255, notnull=False),\n                  Field(\'uv_token\', \'string\', length=64, notnull=False, \\\n                    writable=False, readable=False),\n                  Field(\'data_updated\', \'boolean\', notnull=False),]\n\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=True, signature=False, migrate=True)\n\n## Change the display format for a user within this system.\n## Carnet is our best chance for identifying users.\n## db.auth_user._format = \'%(carnet)s\'\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = \'logging\' or \'smtp.gmail.com:587\'\nmail.settings.sender = \'you@gmail.com\'\nmail.settings.login = \'username:password\'\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n## disable registration\nauth.settings.actions_disabled.append(\'register\')\n\n## if you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, write your domain:api_key in private/janrain.key\nfrom gluon.contrib.login_methods.rpx_account import use_janrain\nuse_janrain(auth, filename=\'private/janrain.key\')\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\n## >>> db.define_table(\'mytable\',Field(\'myfield\',\'string\'))\n##\n## Fields can be \'string\',\'text\',\'password\',\'integer\',\'double\',\'boolean\'\n##       \'date\',\'time\',\'datetime\',\'blob\',\'upload\', \'reference TABLENAME\'\n## There is an implicit \'id integer autoincrement\' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield=\'value\')\n## >>> rows=db(db.mytable.myfield==\'value\').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n# A project contains an description and name\ndb.define_table(\'area_level\',\n                Field(\'name\', \'string\', label = T(\'name\')),\n                Field(\'description\', \'text\', label = T(\'description\')),\n                format=\'%(name)s\')\n\ndb.define_table(\'project\',\n                Field (\'project_id\', \'string\', unique = True, length = 255, \\\n                    label = T(\'project_id\')),\n                Field (\'name\', \'string\', label = T(\'name\')),\n                Field (\'area_level\', \'reference area_level\', label = T(\'area_level\')),\n                Field (\'description\', \'text\', label = T(\'description\')),\n                Field (\'physical_location\', \'text\', \\\n                    label = T(\'physical_location\')),\n                format=\'%(name)s\')\n\ndb.define_table(\'period\',\n                Field (\'name\', \'string\', unique = True, length = 255, \\\n                    label = T(\'name\')),\n                format = \'%(name)s\')\n\ndb.define_table(\'period_year\',\n                Field(\'yearp\', \'integer\', label = T(\'yearp\')),\n                Field(\'period\', \'reference period\', label = T(\'period\')),\n                format = \'%(yearp)s - %(period)s\')\n\n# The relationship between a user and a subproject contains\n# the history of the final practice,\n# it has the starting cycle and the ending cycle\n# it also is the central key for all operations with interesting data\ndb.define_table(\'user_project\',\n                Field(\'assigned_user\', \'reference auth_user\', \\\n                    label = T(\'assigned_user\')),\n                Field(\'project\', \'reference project\', label = T(\'project\')),\n                Field(\'period\', \'reference period_year\', label = T(\'period\')),\n                Field(\'pro_bono\', \'boolean\', length=255, notnull=False, \\\n                    label = T(\'pro_bono\')),\n                Field (\'periods\', \'integer\', notnull=False, \\\n                    label = T(\'periods\')))\n\nfirst_period_name = \'First Semester\'\nsecond_period_name = \'Second Semester\'\n\n# This are the tables that store important links and uploaded\n# files by admin.\ndb.define_table(\'link\',\n                Field(\'url\', \'text\', notnull=True, label = T(\'url/URL\')),\n                Field(\'blank\', \'boolean\', label = T(\'blank\')),\n                Field(\'url_text\', \'text\', notnull=True, \\\n                    label = T(\'url_text\')),\n                Field(\'visible\', \'boolean\', notnull=True, \\\n                    label = T(\'visible\')),\n                Field(\'is_public\', \'boolean\', notnull=False, \n                    label = T(\'is_public\')),\n                format=\'%(url_text)s\')\n\n#Frontend notification\ndb.define_table(\'front_notification\',\n                Field(\'name\', \'string\', notnull=True, label = T(\'name\')),\n                Field(\'content_text\', \'text\', notnull=False, \\\n                    label = T(\'content_text\')),\n                Field(\'url\', \'string\', notnull=False, label = T(\'url/URL\')),\n                Field(\'visible\', \'boolean\', notnull=False, label = T(\'visible\')),\n                Field(\'is_public\', \'boolean\', notnull=False, \\\n                    label = T(\'is_public\')),\n                Field(\'file_data\', \'upload\', default=\'\', notnull=False, \\\n                    label = T(\'file_data\')),\n                Field(\'promoted\', \'boolean\', notnull=False, \\\n                    label = T(\'promoted\')),\n                format=\'%(name)s\'\n                )\n\n#Published files entity\ndb.define_table(\'uploaded_file\',\n                Field(\'name\', \'string\', notnull=True, label = T(\'name\')),\n                Field(\'visible\', \'boolean\', label = T(\'visible\')),\n                Field(\'file_data\', \'upload\', default=\'\', \\\n                    label = T(\'file_data\')),\n                Field(\'is_public\', \'boolean\', notnull=False, \\\n                    label = T(\'is_public\')),\n                format=\'%(name)s\')\n\n#User gruops relationships with files, notifications, links\ndb.define_table(\'file_access\',\n                Field (\'user_role\', \'reference auth_group\', \\\n                    label = T(\'user_role\')),\n                Field (\'uploaded_file\', \'reference uploaded_file\', \\\n                    label = T(\'uploaded_file\')),\n                )\n\ndb.define_table(\'link_access\',\n                Field (\'user_role\', \'reference auth_group\', \\\n                    label = T(\'user_role\')),\n                Field (\'link\', \'reference link\', \\\n                    label = T(\'link\')),\n                )\n\ndb.define_table(\'notification_access\',\n                Field (\'user_role\', \'reference auth_group\', \\\n                    label = T(\'user_role\')),\n                Field (\'front_notification\', \'reference front_notification\',\\\n                    label = T(\'front_notification\')),\n                )\n\n#Reports and Activities structure\ndb.define_table(\'report_restriction\',\n                Field(\'name\', \'string\', notnull=False, \\\n                    label = T(\'name\')),\n                Field(\'start_date\', \'date\', notnull=False, \\\n                    label = T(\'start_date\')),\n                Field(\'end_date\', \'date\', notnull=False, \\\n                    label = T(\'end_date\')),\n                Field(\'is_enabled\', \'boolean\', notnull=False, \\\n                    label = T(\'is_enabled\')),\n                )\n\ndb.define_table(\'report_status\',\n                Field(\'name\', \'string\', notnull=True, label = T(\'name\')),\n                Field(\'description\', \'string\', notnull=True), \\\n                label = T(\'description\'))\n\ndb.define_table(\'report\',\n                Field(\'created\', \'date\', \\\n                label = T(\'created\')),\n                Field(\'assignation\', \'reference user_project\', \\\n                label = T(\'assignation\')),\n                Field(\'report_restriction\', \'reference report_restriction\', \\\n                label = T(\'report_restriction\')),\n                Field(\'score\', \'integer\', \\\n                label = T(\'score\')),\n                Field(\'status\', \'reference report_status\', notnull=True, \\\n                label = T(\'status\')),\n                )\n\ndb.define_table(\'log_type\',\n                Field(\'name\', \'string\', notnull=True, label = T(\'name\')),\n                format=\'%(entry_date)s\'\n                )\n\ndb.define_table(\'log_entry\',\n                Field(\'log_type\', \'reference log_type\', \\\n                    label = T(\'Tlog_type\')),\n                Field(\'entry_date\', \'date\', notnull=True, \\\n                    label = T(\'entry_date\')),\n                Field(\'description\', \'text\', notnull=True, \\\n                    label = T(\'description\')),\n                Field(\'report\', \'reference report\', \\\n                    label = T(\'report\')),\n                format=\'%(entry_date)s\'\n                )\n#Project item requirements structure\ndb.define_table(\'item_type\',\n                Field(\'name\', \'string\', notnull=True, label = T(\'name\')),\n                format=\'%(name)s\'\n                )\n\ndb.define_table(\'item_restriction\',\n                Field(\'name\', \'string\', notnull=False, label = T(\'name\')),\n                Field(\'is_enabled\', \'boolean\', notnull=False, \\\n                    label = T(\'is_enabled\')),\n                Field(\'permanent\', \'boolean\', notnull=False, \\\n                    label = T(\'permanent\')),\n                Field(\'teacher_only\', \'boolean\', notnull=True, \\\n                    label = T(\'teacher_only\')),\n                Field(\'admin_only\', \'boolean\', notnull=True, \\\n                    label = T(\'admin_only\')),\n                Field(\'item_type\', \'reference item_type\', \\\n                    label = T(\'item_type\')),\n                Field(\'period\', \'reference period_year\', \\\n                    label = T(\'period\')),\n                format=\'%(name)s\'\n                )\n\ndb.define_table(\'item_restriction_area\', \n                Field(\'area_level\', \'reference area_level\', \\\n                    label = T(\'area_level\')),\n                Field(\'item_restriction\', \'reference item_restriction\', \\\n                    label = T(\'item_restriction\')),\n                Field(\'is_enabled\', \'boolean\', notnull=False, \\\n                    label = T(\'is_enabled\')),\n                )\n\ndb.define_table(\'item_restriction_exception\', \n                Field(\'project\', \'reference project\', \\\n                    label = T(\'project\')),\n                Field(\'item_restriction\', \'reference item_restriction\', \\\n                    label = T(\'item_restriction\')),\n                )\n\ndb.define_table(\'item\',\n                Field(\'is_active\', \'boolean\', notnull=False, \\\n                    label = T(\'is_active\')),\n                Field(\'description\', \'text\', notnull=False, \\\n                    label = T(\'description\')),\n                Field(\'uploaded_file\', \'upload\', default=\'\', notnull=False, \\\n                    label = T(\'uploaded_file\')),\n                Field(\'done_activity\', \'boolean\', notnull=False, \\\n                    label = T(\'done_activity\')),\n                Field(\'created\', \'reference period_year\', \\\n                    label = T(\'created\')),\n                Field(\'item_restriction\', \'reference item_restriction\', \\\n                    label = T(\'item_restriction\')),\n                Field(\'assignation\', \'reference user_project\', \\\n                    label = T(\'assignation\')),\n                format=\'%(name)s\'\n                )\n\n#User updated data validation\nif auth.user != None:\n    groups = db((db.auth_membership.user_id==auth.user.id)& \\\n                    (db.auth_group.role==\'Student\')& \\\n                    (db.auth_group.id==db.auth_membership.group_id)). \\\n                    select().first()\n    if groups != None:\n        path  = request.env.path_info\n        update_url = \'/cpfecys/student/update_data\'\n        logout_url = \'/default/user/logout\'\n        if not db(db.auth_user.id==auth.user.id).select().first().data_updated:\n                if path != update_url and not logout_url in path:\n                    redirect(URL(\'student\',\'update_data\'))\n\n# User Roles\n## Super-Administrator:\nsetup = db.auth_user(db.auth_user.username == \'admin\')\nif setup is None:\n    ## Report Status Types\n    db.report_status.insert(name="Draft", description="")\n    db.report_status.insert(name="Grading", description="")\n    db.report_status.insert(name="Recheck", description="")\n    db.report_status.insert(name="Acceptance", description="")\n    #Default item types\n    db.item_type.insert(name=\'File\')\n    db.item_type.insert(name=\'Activity\')\n\n    #Default log types\n    db.log_type.insert(name=\'Activity\')\n    db.log_type.insert(name=\'Anomaly\')\n\n    semester1 = db.period.insert(name = first_period_name)\n    semester2 = db.period.insert(name = second_period_name)\n    ## Final Practice Areas of DTT\n    lvl_1 = db.area_level.insert(name = "DTT Tutor Acad\xc3\xa9mico", description = "")\n    lvl_2 = db.area_level.insert(name = "DTT Tutor de Comunicaci\xc3\xb3n", description = "")\n    lvl_3 = db.area_level.insert(name = "DTT Tutor de Desarrollo", description = "")\n    lvl_4 = db.area_level.insert(name = "DTT Tutor de Innovaci\xc3\xb3n", description = "")\n    lvl_5 = db.area_level.insert(name = "DTT Tutor de Investigaci\xc3\xb3n", description = "")\n    lvl_6 = db.area_level.insert(name = "DTT Tutor de Infraestructura", description = "")\n    ## Creation of standard \'Projects\'\n    db.project.insert(project_id = \'0283A\', area_level = lvl_1, name = \'An\xc3\xa1lisis y Dise\xc3\xb1o de Sistemas 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0785A\', area_level = lvl_1, name = \'An\xc3\xa1lisis y Dise\xc3\xb1o de Sistemas 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0785B\', area_level = lvl_1, name = \'An\xc3\xa1lisis y Dise\xc3\xb1o de Sistemas 2 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0778A\', area_level = lvl_1, name = \'Arquitectura de Computadoras y Ensambladores 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0778B\', area_level = lvl_1, name = \'Arquitectura de Computadoras y Ensambladores 1 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0779A\', area_level = lvl_1, name = \'Arquitectura de Computadoras y Ensambladores 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0774A\', area_level = lvl_1, name = \'Bases de Datos 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0774B\', area_level = lvl_1, name = \'Bases de Datos 1 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0775A\', area_level = lvl_1, name = \'Bases de Datos 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0775B\', area_level = lvl_1, name = \'Bases de Datos 2 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0738A\', area_level = lvl_1, name = \'Bases de Datos Avanzadas (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0014A+\', area_level = lvl_1, name = \'Econom\xc3\xada (Secci\xc3\xb3n A+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0014A-\', area_level = lvl_1, name = \'Econom\xc3\xada (Secci\xc3\xb3n A-)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0790A\', area_level = lvl_1, name = \'Emprendedores de Negocios Inform\xc3\xa1ticos\t (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0772A\', area_level = lvl_1, name = \'Estructura de Datos (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0772B\', area_level = lvl_1, name = \'Estructura de Datos (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0786N\', area_level = lvl_1, name = \'Gerenciales 1 (Secci\xc3\xb3n N)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0786P\', area_level = lvl_1, name = \'Gerenciales 1 (Secci\xc3\xb3n P)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0787A\', area_level = lvl_1, name = \'Gerenciales 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0972A\', area_level = lvl_1, name = \'Inteligencia Artificial 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0972B\', area_level = lvl_1, name = \'Inteligencia Artificial 1 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0770A\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0770B\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 1 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0770C\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 1 (Secci\xc3\xb3n C)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0770D\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 1 (Secci\xc3\xb3n D)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0770E\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 1 (Secci\xc3\xb3n E)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0771A\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0771B\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 2 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0771C\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 2 (Secci\xc3\xb3n C)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0771D\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 2 (Secci\xc3\xb3n D)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0771E\', area_level = lvl_1, name = \'Introducci\xc3\xb3n a la Programaci\xc3\xb3n y Computaci\xc3\xb3n 2 (Secci\xc3\xb3n E)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0796A+\', area_level = lvl_1, name = \'Lenguajes Formales y de Programaci\xc3\xb3n (Secci\xc3\xb3n A+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0796A-\', area_level = lvl_1, name = \'Lenguajes Formales y de Programaci\xc3\xb3n (Secci\xc3\xb3n A-)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0796B+\', area_level = lvl_1, name = \'Lenguajes Formales y de Programaci\xc3\xb3n (Secci\xc3\xb3n B+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0796B-\', area_level = lvl_1, name = \'Lenguajes Formales y de Programaci\xc3\xb3n (Secci\xc3\xb3n B-)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0795A+\', area_level = lvl_1, name = \'L\xc3\xb3gica de Sistemas (Secci\xc3\xb3n A+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0795A-\', area_level = lvl_1, name = \'L\xc3\xb3gica de Sistemas (Secci\xc3\xb3n A-)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0773A+\', area_level = lvl_1, name = \'Manejo e Implementaci\xc3\xb3n de Archivos (Secci\xc3\xb3n A+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0773A-\', area_level = lvl_1, name = \'Manejo e Implementaci\xc3\xb3n de Archivos (Secci\xc3\xb3n A-)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0729A\', area_level = lvl_1, name = \'Modelaci\xc3\xb3n y Simulaci\xc3\xb3n 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0730A\', area_level = lvl_1, name = \'Modelaci\xc3\xb3n y Simulaci\xc3\xb3n 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0964A\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Comptuacional (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0964B\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Comptuacional (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0777A\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Lenguajes y Compiladores 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0777B\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Lenguajes y Compiladores 1 (Secci\xc3\xb3n B)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0777C\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Lenguajes y Compiladores 1 (Secci\xc3\xb3n C)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0777D\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Lenguajes y Compiladores 1 (Secci\xc3\xb3n D)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0781A+\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Lenguajes y Compiladores 2 (Secci\xc3\xb3n A+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0781A-\', area_level = lvl_1, name = \'Organizaci\xc3\xb3n Lenguajes y Compiladores 2 (Secci\xc3\xb3n A+)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'2025A\', area_level = lvl_1, name = \'Pr\xc3\xa1cticas Iniciales (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'2036A\', area_level = lvl_1, name = \'Pr\xc3\xa1cticas Intermedias (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0667P\', area_level = lvl_1, name = \'Programaci\xc3\xb3n Comercial 1 (Secci\xc3\xb3n P)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0090A\', area_level = lvl_1, name = \'Programaci\xc3\xb3n de Computadoras 1 (090 Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0092N\', area_level = lvl_1, name = \'Programaci\xc3\xb3n de Computadoras 2 (Secci\xc3\xb3n N)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0092P\', area_level = lvl_1, name = \'Programaci\xc3\xb3n de Computadoras 2 (Secci\xc3\xb3n P)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0092Q\', area_level = lvl_1, name = \'Programaci\xc3\xb3n de Computadoras 2 (Secci\xc3\xb3n Q)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0970A\', area_level = lvl_1, name = \'Redes de Computadoras 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0975A\', area_level = lvl_1, name = \'Redes de Computadoras 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0966A\', area_level = lvl_1, name = \'Seguridad y Auditoria de Redes (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0799A\', area_level = lvl_1, name = \'Seminario de Investigaci\xc3\xb3n (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0797A\', area_level = lvl_1, name = \'Seminario de Sistemas 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0798A\', area_level = lvl_1, name = \'Seminario de Sistemas 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0281A\', area_level = lvl_1, name = \'Sistemas Operativos 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0285A\', area_level = lvl_1, name = \'Sistemas Operativos 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0780A\', area_level = lvl_1, name = \'Software Avanzado (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0722A\', area_level = lvl_1, name = \'Teoria de Sistemas 1 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'0721A\', area_level = lvl_1, name = \'Teoria de Sistemas 2 (Secci\xc3\xb3n A)\', description = \'\', physical_location = \'\')\n    # Various Projects\n    db.project.insert(project_id = \'PV001\', area_level = lvl_6, name = \'COECYS\', description = \'Congreso de Estudiantes de Ingenier\xc3\xada en Ciencias y Sistemas\', physical_location = \'Oficina de Congresos Estudiantiles Ingenier\xc3\xada USAC, Edificio T-1, tercer nivel\')\n    db.project.insert(project_id = \'PV002\', area_level = lvl_1, name = \'DSI\', description = \'Departamento de Soporte Inform\xc3\xa1tico\', physical_location = \'Edificio T3, Salon 104; Universidad de San Carlos de Guatemala.\')\n    db.project.insert(project_id = \'PV003\', area_level = lvl_4, name = \'SAE-SAP\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'PV004\', area_level = lvl_4, name = \'ITCoE\', description = \'\', physical_location = \'\')\n    db.project.insert(project_id = \'PV005\', area_level = lvl_3, name = \'Centro de C\xc3\xa1lculo FIUSAC\', description = \'\', physical_location = \'Centro de C\xc3\xa1lculo Facultad de Ingenier\xc3\xada USAC.\')\n    db.project.insert(project_id = \'PV006\', area_level = lvl_4, name = \'Rector\xc3\xada (Infraestructura)\', description = \'Proyecto de Infraestructura en Rector\xc3\xada Universidad de San Carlos de Guatemala\', physical_location = \'Rector\xc3\xada USAC.\')\n    db.project.insert(project_id = \'PV007\', area_level = lvl_3, name = \'Centro de Investigaci\xc3\xb3n FIUSAC\', description = \'\', physical_location = \'Centro de Investigaci\xc3\xb3n Facultad de Ingenier\xc3\xada USAC.\')\n    db.project.insert(project_id = \'PV008\', area_level = lvl_3, name = \'Escuela de Ciencias y Sistemas FIUSAC\', description = \'Desarrollo de aplicaciones y utilidades para la Escuela de Ciencias y Sistemas FIUSAC.\', physical_location = \'Escuela de Ciencias y Sistemas, Edificio T3.\')\n    ## Would be a good idea to at least join courses with UV here\n    ## User Roles Setup:\n    supersu = db.auth_user.insert(email = \'admin@admin.com\', first_name = \'Super\',\n                                         last_name = \'Administrator\', username = \'admin\',\n                                         password = db.auth_user.password.validate(\'superadmin\')[0])\n    superadmins = auth.add_group(role = \'Super-Administrator\',description = \'In charge of the whole system administration.\')\n    auth.add_membership(superadmins, supersu)\n    ## Student:\n    students = auth.add_group(\'Student\',\n                              \'User that is enrolled in some practice. Limited access.\')\n    ## Teacher:\n    teachers = auth.add_group(\'Teacher\',\n                              \'User that evaluates students in some courses. When final practice is teaching.\')\n#\n# automatically tries to create the next period in may and november respectively\n# Using the following logic:\n# - In May..Dec the second period of current year is created.\n# - In Nov the first period of next year is created.\n# - In Jan..Apr the first period of current year is created.\n#\nfirst_period = db.period(db.period.name == first_period_name)\nsecond_period = db.period(db.period.name == second_period_name)\nimport datetime\nnow = datetime.datetime.now()\nyear = now.year\nif now.month >= 5:\n    #check and create second semester of current year\n    pery = db.period_year((db.period_year.yearp == year)&\n                          (db.period_year.period == second_period))\n    if not pery:\n        db.period_year.insert(yearp = year, period = second_period)\nelse:\n    #check and create first semester of current year\n    pery = db.period_year((db.period_year.yearp == year)&\n                          (db.period_year.period == first_period))\n    if not pery:\n        db.period_year.insert(yearp = year, period = first_period)\nif now.month >= 11:\n    #check and create first semester of next year\n    pery = db.period_year((db.period_year.yearp == (year + 1))&\n                          (db.period_year.period == first_period))\n    if not pery:\n        db.period_year.insert(yearp = (year + 1), period = first_period)\n## after defining tables, uncomment below to enable auditing\n# auth.enable_record_versioning(db)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/opt/web-apps/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/opt/web-apps/web2py/applications/welcome/models/db.py", line 332, in <module>\n    setup = db.auth_user(db.auth_user.username == \'admin\')\n  File "/opt/web-apps/web2py/gluon/dal.py", line 8829, in __call__\n    limitby=(0,1),for_update=for_update, orderby=orderby, orderby_on_limitby=False).first()\n  File "/opt/web-apps/web2py/gluon/dal.py", line 10335, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/opt/web-apps/web2py/gluon/dal.py", line 1831, in select\n    return self._select_aux(sql,fields,attributes)\n  File "/opt/web-apps/web2py/gluon/dal.py", line 1796, in _select_aux\n    self.execute(sql)\n  File "/opt/web-apps/web2py/gluon/dal.py", line 1916, in execute\n    return self.log_execute(*a, **b)\n  File "/opt/web-apps/web2py/gluon/dal.py", line 1910, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/opt/web-apps/web2py/gluon/contrib/pymysql/cursors.py", line 117, in execute\n    self.errorhandler(self, exc, value)\n  File "/opt/web-apps/web2py/gluon/contrib/pymysql/connections.py", line 202, in defaulterrorhandler\n    raise errorclass, errorvalue\nProgrammingError: (1146, u"Table \'cpfecys.auth_user\' doesn\'t exist")\n'
p11
s.